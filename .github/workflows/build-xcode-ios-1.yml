name: Xcode - Build and Analyze

on:
  #  push:
  #    branches: [ "main" ]
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    # runs-on: macos-latest
    runs-on: macos-15
    steps:

      - name: Select Xcode 16.2
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          echo "Current Xcode version:"
          xcodebuild -version

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          # scheme_list=$(xcodebuild -list -json | tr -d "\n")
          # default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          scheme="VisitManaagementApp_iOS"
          default="VisitManaagementApp_iOS"
          echo $default | cat >default
          echo Using scheme: $scheme
          echo Using default scheme: $default

      - name: Check current Xcode version
        run: |
          echo "Current Xcode version:"
          xcodebuild -version
          echo "- - - - - - - - - - - - -"
          echo "Available Xcode versions:"
          ls /Applications/ | grep Xcode

      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
           echo BLOCKED - until code can be added to update xcodebuild to a newer version
        #  # if [ $scheme = default ]; then scheme=$(cat default); fi
           if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
           file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
           xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
